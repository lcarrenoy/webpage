{
  "hash": "c53fae64c528f51d3893e4af51a34efb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data Anlyst\"\nsubtitle: \"Python, SQL y R\"\noutput:\n  html_document:\n    toc: TRUE\n    toc_float: TRUE\n    code_download: TRUE\n---\n\n\n\n## Introducción\n\nEste documento demuestra cómo crear gráficos de barras utilizando **Python** (Matplotlib), **SQL** para consultas de datos, y **R** (ggplot2) para visualizaciones. Esta aproximación multilenguaje permite aprovechar las fortalezas específicas de cada herramienta.\n\n## Bar Charts - Python (Matplotlib)\n\n### Gráfico Básico de Barras Verticales\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.python .cell-code}\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Datos de lenguajes de programación\neje_x = ['Python', 'R', 'Node.js', 'PHP', 'Java', 'JavaScript']\neje_y = [50, 20, 35, 47, 42, 55]\n\nplt.figure(figsize=(12, 7))\ncolors = ['#3776ab', '#276DC3', '#8CC84B', '#777BB4', '#ED8B00', '#F7DF1E']\nbars = plt.bar(eje_x, eje_y, color=colors, alpha=0.8, edgecolor='black', linewidth=1)\n\n# Agregar valores encima de las barras\nfor bar in bars:\n    height = bar.get_height()\n    plt.text(bar.get_x() + bar.get_width()/2., height + 0.5,\n             f'{int(height)}K', ha='center', va='bottom', fontweight='bold')\n\nplt.ylabel('Cantidad de usuarios (miles)', fontsize=12)\nplt.xlabel('Lenguajes de programación', fontsize=12)\nplt.title('Popularidad de Lenguajes de Programación', fontsize=14, fontweight='bold')\nplt.xticks(rotation=45)\nplt.grid(axis='y', alpha=0.3)\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output-display}\n![](Data_Analyst_files/figure-html/unnamed-chunk-1-1.png){fig-align='center' width=1152}\n:::\n:::\n\n\n### Gráfico de Barras Horizontales\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.python .cell-code}\nimport matplotlib.pyplot as plt\n\n# Datos de habilidades profesionales\nhabilidades = ['Programación', 'Ciencia de Datos', 'Matemáticas', 'Ingeniería', 'Diseño', 'Marketing']\nempleados = [76, 31, 45, 57, 38, 29]\n\nplt.figure(figsize=(12, 8))\ncolors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEAA7', '#DDA0DD']\nbars = plt.barh(habilidades, empleados, color=colors, alpha=0.8, edgecolor='black', linewidth=1)\n\n# Agregar valores al final de las barras\nfor i, bar in enumerate(bars):\n    width = bar.get_width()\n    plt.text(width + 1, bar.get_y() + bar.get_height()/2.,\n             f'{int(width)}', ha='left', va='center', fontweight='bold')\n\nplt.xlabel('Número de empleados', fontsize=12)\nplt.ylabel('Habilidades', fontsize=12)\nplt.title('Distribución de Habilidades en el Equipo', fontsize=14, fontweight='bold')\nplt.grid(axis='x', alpha=0.3)\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output-display}\n![](Data_Analyst_files/figure-html/unnamed-chunk-2-3.png){fig-align='center' width=1152}\n:::\n:::\n\n\n### Gráfico de Barras Agrupadas\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.python .cell-code}\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Datos de múltiples series\naños = ['2020', '2021', '2022', '2023', '2024']\npython = [45, 50, 55, 60, 65]\nr = [15, 20, 22, 25, 28]\njavascript = [40, 45, 50, 55, 60]\n\nx = np.arange(len(años))\nwidth = 0.25\n\nplt.figure(figsize=(12, 8))\nbars1 = plt.bar(x - width, python, width, label='Python', color='#3776ab', alpha=0.8)\nbars2 = plt.bar(x, r, width, label='R', color='#276DC3', alpha=0.8)\nbars3 = plt.bar(x + width, javascript, width, label='JavaScript', color='#F7DF1E', alpha=0.8)\n\nplt.xlabel('Años', fontsize=12)\nplt.ylabel('Usuarios (miles)', fontsize=12)\nplt.title('Evolución de Usuarios por Lenguaje (2020-2024)', fontsize=14, fontweight='bold')\nplt.xticks(x, años)\nplt.legend()\nplt.grid(axis='y', alpha=0.3)\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output-display}\n![](Data_Analyst_files/figure-html/unnamed-chunk-3-5.png){fig-align='center' width=1152}\n:::\n:::\n\n\n## SQL - Consultas para Análisis de Datos\n\n### Consulta de Datos de Lenguajes\n\n\n::: {.cell}\n\n```{.sql .cell-code}\nSELECT \n    lenguaje,\n    usuarios,\n    ROUND(usuarios * 100.0 / (SELECT SUM(usuarios) FROM ventas_programacion), 1) as porcentaje_mercado\nFROM ventas_programacion \nORDER BY usuarios DESC;\n```\n\n\n<div class=\"knitsql-table\">\n\n\nTable: 6 records\n\n|lenguaje   | usuarios| porcentaje_mercado|\n|:----------|--------:|------------------:|\n|JavaScript |       55|               22.1|\n|Python     |       50|               20.1|\n|PHP        |       47|               18.9|\n|Java       |       42|               16.9|\n|Node.js    |       35|               14.1|\n|R          |       20|                8.0|\n\n</div>\n:::\n\n\n### Top 3 Lenguajes Más Populares\n\n\n::: {.cell}\n\n```{.sql .cell-code}\nSELECT \n    lenguaje,\n    usuarios,\n    CASE \n        WHEN usuarios >= 50 THEN 'Alta Popularidad'\n        WHEN usuarios >= 35 THEN 'Popularidad Media'\n        ELSE 'Popularidad Baja'\n    END as categoria_popularidad\nFROM ventas_programacion \nORDER BY usuarios DESC \nLIMIT 3;\n```\n\n\n<div class=\"knitsql-table\">\n\n\nTable: 3 records\n\n|lenguaje   | usuarios|categoria_popularidad |\n|:----------|--------:|:---------------------|\n|JavaScript |       55|Alta Popularidad      |\n|Python     |       50|Alta Popularidad      |\n|PHP        |       47|Popularidad Media     |\n\n</div>\n:::\n\n\n### Análisis de Habilidades con Estadísticas\n\n\n::: {.cell}\n\n```{.sql .cell-code}\nSELECT \n    habilidad,\n    cantidad,\n    ROUND(AVG(cantidad) OVER(), 1) as promedio_general,\n    ROUND(cantidad - AVG(cantidad) OVER(), 1) as diferencia_promedio,\n    CASE \n        WHEN cantidad > AVG(cantidad) OVER() THEN 'Por encima del promedio'\n        ELSE 'Por debajo del promedio'\n    END as clasificacion\nFROM empleados_habilidades \nORDER BY cantidad DESC;\n```\n\n\n<div class=\"knitsql-table\">\n\n\nTable: 6 records\n\n|habilidad        | cantidad| promedio_general| diferencia_promedio|clasificacion           |\n|:----------------|--------:|----------------:|-------------------:|:-----------------------|\n|Programación     |       76|               46|                  30|Por encima del promedio |\n|Ingeniería       |       57|               46|                  11|Por encima del promedio |\n|Matemáticas      |       45|               46|                  -1|Por debajo del promedio |\n|Diseño           |       38|               46|                  -8|Por debajo del promedio |\n|Ciencia de Datos |       31|               46|                 -15|Por debajo del promedio |\n|Marketing        |       29|               46|                 -17|Por debajo del promedio |\n\n</div>\n:::\n\n\n### Evolución Temporal de Lenguajes\n\n\n::: {.cell}\n\n```{.sql .cell-code}\nSELECT \n    año,\n    python,\n    r,\n    javascript,\n    (python + r + javascript) as total_usuarios,\n    ROUND(python * 100.0 / (python + r + javascript), 1) as porcentaje_python\nFROM ventas_por_año \nORDER BY año;\n```\n\n\n<div class=\"knitsql-table\">\n\n\nTable: 5 records\n\n|año  | python|  r| javascript| total_usuarios| porcentaje_python|\n|:----|------:|--:|----------:|--------------:|-----------------:|\n|2020 |     45| 15|         40|            100|              45.0|\n|2021 |     50| 20|         45|            115|              43.5|\n|2022 |     55| 22|         50|            127|              43.3|\n|2023 |     60| 25|         55|            140|              42.9|\n|2024 |     65| 28|         60|            153|              42.5|\n\n</div>\n:::\n\n\n## Bar Charts - R (ggplot2)\n\n### Gráfico Básico con R\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Obtener datos de SQL\ndatos_lenguajes <- dbGetQuery(con, \"SELECT lenguaje, usuarios FROM ventas_programacion ORDER BY usuarios DESC\")\n\n# Crear gráfico con ggplot2\nggplot(datos_lenguajes, aes(x = reorder(lenguaje, usuarios), y = usuarios, fill = lenguaje)) +\n  geom_bar(stat = \"identity\", alpha = 0.8, color = \"black\", size = 0.5) +\n  geom_text(aes(label = paste0(usuarios, \"K\")), hjust = -0.1, fontface = \"bold\") +\n  coord_flip() +\n  labs(title = \"Popularidad de Lenguajes de Programación\",\n       subtitle = \"Datos obtenidos de consulta SQL\",\n       x = \"Lenguajes de Programación\", \n       y = \"Usuarios (miles)\") +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n        plot.title = element_text(size = 16, face = \"bold\"),\n        plot.subtitle = element_text(size = 12),\n        axis.text = element_text(size = 11),\n        axis.title = element_text(size = 12, face = \"bold\")) +\n  scale_fill_viridis_d(option = \"plasma\") +\n  scale_y_continuous(expand = expansion(mult = c(0, 0.1)))\n```\n\n::: {.cell-output-display}\n![](Data_Analyst_files/figure-html/unnamed-chunk-8-7.png){fig-align='center' width=1152}\n:::\n:::\n\n\n### Gráfico de Habilidades\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Obtener datos de habilidades\ndatos_habilidades <- dbGetQuery(con, \"SELECT habilidad, cantidad FROM empleados_habilidades ORDER BY cantidad DESC\")\n\nggplot(datos_habilidades, aes(x = reorder(habilidad, cantidad), y = cantidad, fill = cantidad)) +\n  geom_bar(stat = \"identity\", alpha = 0.8, color = \"black\", size = 0.5) +\n  geom_text(aes(label = cantidad), hjust = -0.1, fontface = \"bold\") +\n  coord_flip() +\n  labs(title = \"Distribución de Habilidades en el Equipo\",\n       subtitle = \"Número de empleados por habilidad\",\n       x = \"Habilidades\", \n       y = \"Número de empleados\") +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n        plot.title = element_text(size = 16, face = \"bold\"),\n        plot.subtitle = element_text(size = 12),\n        axis.text = element_text(size = 11),\n        axis.title = element_text(size = 12, face = \"bold\")) +\n  scale_fill_gradient(low = \"#E8F4FD\", high = \"#1E88E5\") +\n  scale_y_continuous(expand = expansion(mult = c(0, 0.1)))\n```\n\n::: {.cell-output-display}\n![](Data_Analyst_files/figure-html/unnamed-chunk-9-1.png){fig-align='center' width=1152}\n:::\n:::\n\n\n### Gráfico de Evolución Temporal\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Obtener datos temporales\ndatos_tiempo <- dbGetQuery(con, \"SELECT * FROM ventas_por_año ORDER BY año\")\n\n# Transformar datos para ggplot\ndatos_long <- pivot_longer(datos_tiempo, \n                          cols = c(python, r, javascript), \n                          names_to = \"lenguaje\", \n                          values_to = \"usuarios\")\n\n# Crear gráfico\nggplot(datos_long, aes(x = factor(año), y = usuarios, fill = lenguaje)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", alpha = 0.8, color = \"black\", size = 0.3) +\n  geom_text(aes(label = paste0(usuarios, \"K\")), \n            position = position_dodge(width = 0.9), \n            vjust = -0.5, \n            fontface = \"bold\", \n            size = 3) +\n  labs(title = \"Evolución de Usuarios por Lenguaje (2020-2024)\",\n       subtitle = \"Crecimiento anual de las principales tecnologías\",\n       x = \"Años\", \n       y = \"Usuarios (miles)\",\n       fill = \"Lenguaje\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size = 16, face = \"bold\"),\n        plot.subtitle = element_text(size = 12),\n        axis.text = element_text(size = 11),\n        axis.title = element_text(size = 12, face = \"bold\"),\n        legend.title = element_text(size = 12, face = \"bold\"),\n        legend.text = element_text(size = 11)) +\n  scale_fill_manual(values = c(\"python\" = \"#3776ab\", \"r\" = \"#276DC3\", \"javascript\" = \"#F7DF1E\")) +\n  scale_y_continuous(expand = expansion(mult = c(0, 0.1)))\n```\n\n::: {.cell-output-display}\n![](Data_Analyst_files/figure-html/unnamed-chunk-10-1.png){fig-align='center' width=1152}\n:::\n:::\n\n\n## Integración SQL + Python\n\nCombinemos una consulta SQL compleja con visualización en Python:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Ejecutar consulta SQL avanzada\ndatos_analisis <- dbGetQuery(con, \"\nSELECT \n    lenguaje,\n    usuarios,\n    CASE \n        WHEN usuarios >= 50 THEN 'Alto'\n        WHEN usuarios >= 35 THEN 'Medio'\n        ELSE 'Bajo'\n    END as categoria,\n    ROUND(usuarios * 100.0 / (SELECT SUM(usuarios) FROM ventas_programacion), 1) as porcentaje\nFROM ventas_programacion \nWHERE usuarios > 25\nORDER BY usuarios DESC\n\")\n\n# Pasar datos a Python\npy$datos_desde_r <- datos_analisis\n```\n:::\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.python .cell-code}\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\n# Usar datos de R/SQL\ndf = pd.DataFrame(datos_desde_r)\n\n# Crear subplot con dos gráficos\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(15, 6))\n\n# Gráfico 1: Barras por usuarios\ncolors = ['#FF6B6B' if cat == 'Alto' else '#4ECDC4' if cat == 'Medio' else '#45B7D1' \n          for cat in df['categoria']]\n\nbars1 = ax1.bar(df['lenguaje'], df['usuarios'], color=colors, alpha=0.8, edgecolor='black')\nax1.set_title('Lenguajes por Número de Usuarios', fontweight='bold')\nax1.set_xlabel('Lenguajes')\nax1.set_ylabel('Usuarios (miles)')\nax1.tick_params(axis='x', rotation=45)\n\n# Agregar valores en las barras\nfor bar in bars1:\n    height = bar.get_height()\n    ax1.text(bar.get_x() + bar.get_width()/2., height + 1,\n             f'{int(height)}K', ha='center', va='bottom', fontweight='bold')\n\n# Gráfico 2: Distribución por porcentaje\nwedges, texts, autotexts = ax2.pie(df['porcentaje'], labels=df['lenguaje'], autopct='%1.1f%%',\n                                   colors=colors, startangle=90)\nax2.set_title('Distribución de Mercado', fontweight='bold')\n\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output-display}\n![](Data_Analyst_files/figure-html/unnamed-chunk-12-1.png){fig-align='center' width=1440}\n:::\n:::\n\n\n## Análisis Comparativo Final\n\n### Resumen de Datos por Categoría\n\n\n::: {.cell}\n\n```{.sql .cell-code}\nSELECT \n    categoria,\n    COUNT(*) as cantidad_lenguajes,\n    AVG(usuarios) as promedio_usuarios,\n    SUM(usuarios) as total_usuarios\nFROM (\n    SELECT \n        lenguaje,\n        usuarios,\n        CASE \n            WHEN usuarios >= 50 THEN 'Alto'\n            WHEN usuarios >= 35 THEN 'Medio'\n            ELSE 'Bajo'\n        END as categoria\n    FROM ventas_programacion\n) \nGROUP BY categoria\nORDER BY total_usuarios DESC;\n```\n\n\n<div class=\"knitsql-table\">\n\n\nTable: 3 records\n\n|categoria | cantidad_lenguajes| promedio_usuarios| total_usuarios|\n|:---------|------------------:|-----------------:|--------------:|\n|Medio     |                  3|          41.33333|            124|\n|Alto      |                  2|          52.50000|            105|\n|Bajo      |                  1|          20.00000|             20|\n\n</div>\n:::\n\n",
    "supporting": [
      "Data_Analyst_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}